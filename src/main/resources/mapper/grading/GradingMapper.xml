<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinopec.smcc.cpro.grading.mapper.GradingMapper">
  <resultMap id="GradingListResult" type="com.sinopec.smcc.cpro.grading.entity.GradingListResult">
    <id column="pkId" property="gradingId"/>
    <result column="fkSystemId" property="fkSystemId"/>
    <result column="systemName" property="systemName"/>
    <result column="fkBizSPRankDegree" property="fkBizSPRankDegree"/>
    <result column="fkBizSPRankLevel" property="fkBizSPRankLevel"/>
    <result column="fkBizSystemDegree" property="fkBizSystemDegree"/>
    <result column="fkBizSystemLevel" property="fkBizSystemLevel"/>
    <result column="fkSpRanklevel" property="fkSpRanklevel"/>
    <result column="expertView" property="expertView"/>
    <result column="rankExplainDesc" property="rankExplainDesc"/>
    <result column="rankTime" property="rankTime"/>
    <result column="competentIsExisting" property="competentIsExisting"/>
    <result column="competentName" property="competentName"/>
    <result column="expertView" property="expertView"/>
    <result column="filler" property="filler"/>
    <result column="fillDate" property="fillDate"/>
    
    <result column="gradingReportName" property="gradingReportName"/>
    <result column="gradingReportId" property="gradingReportId"/>
    <result column="expertReviewName" property="expertReviewName"/>
    <result column="expertReviewId" property="expertReviewId"/>
    <result column="directorOpinionName" property="directorOpinionName"/>
    <result column="directorOpinionId" property="directorOpinionId"/>
  </resultMap>
  
  <!-- 修改系统定级状态 -->
  <update id="updateGradingStatus" parameterType="com.sinopec.smcc.cpro.grading.entity.GradingParam">
    UPDATE t_cpro_system
    SET gradingStatus=2
    WHERE pkId = #{fkSystemId}
  </update>
  
  <insert id="insertGrading" parameterType="com.sinopec.smcc.cpro.grading.entity.GradingParam">
    INSERT INTO t_cpro_score
      (
        pkId,fkSystemId,fkBizSPRankDegree,fkBizSPRankLevel,fkBizSystemDegree,fkBizSystemLevel,
        fkSpRanklevel,expertView,rankExplainDesc,rankTime,competentIsExisting,competentName,
        competentView,filler,fillDate,deleteStatus,createUserName,createTime,updateTime,remark
      ) VALUES (
      <trim suffixOverrides="," >
        <![CDATA[
        #{gradingId,jdbcType=VARCHAR},
        ]]>
        <![CDATA[
        #{fkSystemId,jdbcType=VARCHAR},
        ]]>
        <choose>
          <when test="fkBizSPRankDegree != null and fkBizSPRankDegree != ''">
           <![CDATA[
             #{fkBizSPRankDegree,jdbcType=VARCHAR},
           ]]>
          </when>
          <otherwise>
            <![CDATA[
              DEFAULT,
            ]]>
          </otherwise>
        </choose>
        <choose>
         <when test="fkBizSPRankLevel != null and fkBizSPRankLevel != ''">
           <![CDATA[
             #{fkBizSPRankLevel,jdbcType=VARCHAR},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="fkBizSystemDegree != null and fkBizSystemDegree != ''">
           <![CDATA[
             #{fkBizSystemDegree,jdbcType=VARCHAR},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="fkBizSystemLevel != null and fkBizSystemLevel != ''">
           <![CDATA[
             #{fkBizSystemLevel,jdbcType=VARCHAR},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="fkSpRanklevel != null and fkSpRanklevel != ''">
           <![CDATA[
             #{fkSpRanklevel,jdbcType=VARCHAR},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="expertView != null and expertView != ''">
           <![CDATA[
             #{expertView,jdbcType=TINYINT},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="rankExplainDesc != null and rankExplainDesc != ''">
           <![CDATA[
             #{rankExplainDesc,jdbcType=VARCHAR},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="rankTime != null ">
           <![CDATA[
             #{rankTime,jdbcType=DATE},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="competentIsExisting != null and competentIsExisting != ''">
           <![CDATA[
             #{competentIsExisting,jdbcType=TINYINT},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="competentName != null and competentName != ''">
           <![CDATA[
             #{competentName,jdbcType=VARCHAR},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="competentView != null and competentView != ''">
           <![CDATA[
             #{competentView,jdbcType=TINYINT},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="filler != null and filler != ''">
           <![CDATA[
             #{filler,jdbcType=VARCHAR},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="fillDate != null ">
           <![CDATA[
             #{fillDate,jdbcType=DATE},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="deleteStatus != null and deleteStatus != ''">
           <![CDATA[
             #{deleteStatus,jdbcType=TINYINT},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="createUserName != null and createUserName != ''">
           <![CDATA[
             #{createUserName,jdbcType=VARCHAR},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="createTime != null ">
           <![CDATA[
             #{createTime,jdbcType=DATE},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="updateTime != null ">
           <![CDATA[
             #{updateTime,jdbcType=DATE},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
        <choose>
         <when test="remark != null and remark != ''">
           <![CDATA[
             #{remark,jdbcType=VARCHAR},
           ]]>
         </when>
         <otherwise>
           <![CDATA[
             DEFAULT,
           ]]>
         </otherwise>
        </choose>
     </trim>
     ) ON DUPLICATE KEY UPDATE
     pkId = #{gradingId},
     fkSystemId = #{fkSystemId},
     fkBizSPRankDegree = #{fkBizSPRankDegree},
     fkBizSPRankLevel = #{fkBizSPRankLevel},
     fkBizSystemDegree = #{fkBizSystemDegree},
     fkBizSystemLevel = #{fkBizSystemLevel},
     fkSpRanklevel = #{fkSpRanklevel},
     expertView = #{expertView},
     rankExplainDesc = #{rankExplainDesc},
     rankTime = #{rankTime},
     competentIsExisting = #{competentIsExisting},
     <if test="competentIsExisting == 1">
	     competentName = #{competentName},
	     competentView = #{competentView},
     </if>
     filler = #{filler},
     fillDate = #{fillDate}
  </insert>
  
  <select id="selectEditGrading" parameterType="com.sinopec.smcc.cpro.grading.entity.GradingParam" resultMap="GradingListResult">
    SELECT
			sco.pkId AS gradingId,
			sco.fkSystemId,
			sys.systemName,
			sco.fkBizSPRankDegree,
			sco.fkBizSPRankLevel,
			sco.fkBizSystemDegree,
			sco.fkBizSystemLevel,
			sco.fkSpRanklevel,
			sco.rankExplainDesc,
			sco.rankTime,
			sco.competentIsExisting,
			sco.competentName,
			sco.filler,
			sco.fillDate,
			sco.expertView,
      sco.competentView,
			gradingReport.attachName AS gradingReportName,
			gradingReport.pkId AS gradingReportId,
			expertReview.attachName AS expertReviewName,
			expertReview.pkId AS expertReviewId,
			directorOpinion.attachName AS directorOpinionName,
			directorOpinion.pkId AS directorOpinionId
		FROM
			t_cpro_score sco
		LEFT JOIN t_cpro_system sys ON sco.fkSystemId = sys.pkId
		LEFT JOIN t_cpro_attach gradingReport ON gradingReport.fkSystemId = sco.fkSystemId
		AND gradingReport.fkSyssonId = sco.pkId
		AND gradingReport.fkAttachType = 'gradingReport'
		LEFT JOIN t_cpro_attach expertReview ON expertReview.fkSystemId = sco.fkSystemId
		AND expertReview.fkSyssonId = sco.pkId
		AND expertReview.fkAttachType = 'expertReview'
		LEFT JOIN t_cpro_attach directorOpinion ON directorOpinion.fkSystemId = sco.fkSystemId
		AND directorOpinion.fkSyssonId = sco.pkId
		AND directorOpinion.fkAttachType = 'directorOpinion'
    WHERE sco.fkSystemId = #{fkSystemId}
    LIMIT 0,1
  </select>
  
  <select id="selectDetailsGrading" parameterType="com.sinopec.smcc.cpro.grading.entity.GradingParam" resultMap="GradingListResult">
    SELECT
			sco.pkId AS gradingId,
			sco.fkSystemId,
			sys.systemName,
			sco.fkBizSPRankDegree,
			sco.fkBizSPRankLevel,
			sco.fkBizSystemDegree,
			sco.fkBizSystemLevel,
			sco.fkSpRanklevel,
			sco.rankExplainDesc,
			sco.rankTime,
			sco.competentIsExisting,
			sco.competentName,
			sco.filler,
			sco.fillDate,
			gradingReport.attachName AS gradingReportName,
			gradingReport.pkId AS gradingReportId,
			expertReview.attachName AS expertReviewName,
			expertReview.pkId AS expertReviewId
		FROM
			t_cpro_score sco
		LEFT JOIN t_cpro_system sys ON sco.fkSystemId = sys.pkId
		LEFT JOIN t_cpro_attach gradingReport ON gradingReport.fkSystemId = sco.fkSystemId
		AND gradingReport.fkSyssonId = sco.pkId
		AND gradingReport.fkAttachType = 'gradingReport'
		LEFT JOIN t_cpro_attach expertReview ON expertReview.fkSystemId = sco.fkSystemId
		AND expertReview.fkSyssonId = sco.pkId
		AND expertReview.fkAttachType = 'expertReview'
    WHERE sco.fkSystemId = #{fkSystemId}
    LIMIT 0,1
  </select>
  
    <select id="insertBatchGrading" parameterType="com.sinopec.smcc.cpro.grading.entity.GradingParam" resultMap="GradingListResult">
    select 
      codeBusiness.codeName AS codeBusinessName,
      codeRankLevel.codeName AS codeRankLevelName,
      codeSystemDegree.codeName AS codeSystemDegreeName,
      codeSystemLevel.codeName AS codeSystemLevelName,
      codeSpRanklevel.codeName AS codeSpRanklevelName,
      score.rankExplainDesc,
      score.rankTime,
      score.competentIsExisting,
      score.competentName,
      score.expertView,
      score.competentView,
      attachGradingReport.attachName AS GradingReportName,
      attachExpertReview.attachName AS ExpertReviewName,
      score.filler,
      score.fillDate
    FROM t_cpro_score AS score
      LEFT JOIN t_cpro_system_code AS codeBusiness
      ON score.fkBizSPRankDegree = codeBusiness.systemCode AND codeBusiness.fkCodeType = 11
      LEFT JOIN t_cpro_system_code AS codeRankLevel
      ON score.fkBizSPRankLevel = codeRankLevel.systemCode AND codeRankLevel.fkCodeType = 11
      LEFT JOIN t_cpro_system_code AS codeSystemDegree
      ON score.fkBizSystemDegree = codeSystemDegree.systemCode AND codeSystemDegree.fkCodeType = 11
      LEFT JOIN t_cpro_system_code AS codeSystemLevel
      ON score.fkBizSystemLevel = codeSystemLevel.systemCode AND codeSystemLevel.fkCodeType = 11
      LEFT JOIN t_cpro_system_code AS codeSpRanklevel
      ON score.fkSpRanklevel = codeSpRanklevel.systemCode AND codeSpRanklevel.fkCodeType = 11
      LEFT JOIN t_cpro_attach AS attachGradingReport 
      ON score.fkSystemId = attachGradingReport.fkSystemId
      LEFT JOIN t_cpro_attach AS attachExpertReview
      ON score.fkSystemId = attachExpertReview.fkSystemId
    WHERE score.fkSystemId = #{fkSystemId}
  </select>
</mapper>